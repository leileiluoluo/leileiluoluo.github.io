<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 磊磊落落</title><link>https://leileiluoluo.github.io/posts/</link><description>Recent content in Posts on 磊磊落落</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 07 Aug 2025 16:00:00 +0800</lastBuildDate><atom:link href="https://leileiluoluo.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>在 Spring Boot 中如何优雅的编写一个服务工厂？</title><link>https://leileiluoluo.github.io/posts/how-to-write-a-service-factory-in-spring-boot.html</link><pubDate>Thu, 07 Aug 2025 16:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/how-to-write-a-service-factory-in-spring-boot.html</guid><description>在基于 Spring Boot 的业务开发中，我们有时会遇到这样的场景：即定义了一个通用接口，而该接口拥有多个实现类。在调用这些实现类时，我们通常需要编写一个工厂方法，该工厂方法可以根据指定的参数获取到对应的实现类。
那么，提供该工厂方法的类就是一个服务工厂，本文即是探讨如何优雅的编写这个服务工厂。</description></item><item><title>週末逛黃渤海分界線</title><link>https://leileiluoluo.github.io/posts/huang-bo-hai-boundary.html</link><pubDate>Mon, 04 Aug 2025 11:40:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/huang-bo-hai-boundary.html</guid><description>週末和太太、孩子一起去了旅順黃渤海分界線景點。這裏是遼東半島的最南端，也就是正好在我國像雄雞一樣地圖的雞嘴上。
正值伏天，當日天氣非常炎熱，站在山上，涼爽的海風迎面吹來，帶來一絲絲涼意。
也許是山東、河北、遼寧將渤海團團圍住而只剩旅順和蓬萊這個之間的出口的緣故。站在「一山擔兩海」的位置，一眼望去，黃海與渤海的海水竟不相容，一面是深藍色，一面是黃藍色，肉眼即可看出差別，非常的神奇。</description></item><item><title>週末燕窩嶺小逛</title><link>https://leileiluoluo.github.io/posts/yan-wo-ling.html</link><pubDate>Sun, 13 Jul 2025 09:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/yan-wo-ling.html</guid><description>週末和太太、孩子一起去了燕窩嶺，這是一個臨海的山體公園。當日的天氣晴朗無雲，山林鬱鬱蔥蔥，很好的遮蔽了日頭，穿梭於其中，涼爽的海風吹過來，很是愜意。
燕窩嶺是一個以姻緣爲主題的公園，裏邊有傳統文化中男女由相戀到結婚的整個的過程的介紹，也有各種鳳凰、鴛鴦等喻示男女形象的建築。這裏長長的鐵鏈上，有不少情侶掛上的同心鎖，這裏有海有山，很好的應合了海誓山盟的情境。</description></item><item><title>2025 鄂爾多斯之行</title><link>https://leileiluoluo.github.io/posts/2025-erdos.html</link><pubDate>Wed, 02 Jul 2025 16:10:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/2025-erdos.html</guid><description>&lt;p>這次回鄂爾多斯探親，在這邊待了有半個月之久。時隔兩年再次回來，感嘆父母又變老了一些。&lt;/p>
&lt;p>這一次回來感觸很多，收穫也很多。陪伴了父母，探望了二舅二妗，見到了姑父，去醫院看了表姐，去學校看了雅涵，去烏海看了玉蘭姨，見到了從南京回來的文豆和媳婦，太太還幫我參加了文豆的婚禮，見到了三舅一家，真的是收穫頗豐。&lt;/p></description></item><item><title>天門山之旅</title><link>https://leileiluoluo.github.io/posts/tian-men-shan.html</link><pubDate>Mon, 09 Jun 2025 19:10:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/tian-men-shan.html</guid><description>2025 六一兒童節，和太太帶孩子和姥爺一起去了莊河天門山景區。
進入六月，植被已非常茂盛，但還沒有七八月份那樣的炎熱，真是適合出遊的好時節。這裏風清氣爽、綠水青山，讓人心情舒暢。</description></item><item><title>如何使用 Alibaba DataX 进行 MySQL 到 PostgreSQL 的数据迁移</title><link>https://leileiluoluo.github.io/posts/how-to-migrate-data-from-mysql-to-postgres-with-datax.html</link><pubDate>Tue, 06 May 2025 17:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/how-to-migrate-data-from-mysql-to-postgres-with-datax.html</guid><description>DataX 是阿里开源的一款基于 Java 编写的非常实用的数据迁移工具，其不仅支持关系型数据库间的数据迁移，还支持关系型数据库与非关系型数据库间的数据迁移。其使用也非常的简单，只需安装 JDK、配置 JSON 即可，无须关注太多实现细节。其性能也非常了得，能满足生产环境的数据迁移要求。</description></item><item><title>Spring Data Neo4j 指定 spring.data.neo4j.database 时报错该如何解决？</title><link>https://leileiluoluo.github.io/posts/spring-data-neo4j-database-config-error.html</link><pubDate>Mon, 05 May 2025 19:30:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/spring-data-neo4j-database-config-error.html</guid><description>&lt;p>本人在对 Spring Data Neo4j 的实际使用中，发现一个问题，即：配置自定义 &lt;code>TransactionManager&lt;/code> 后，指定 &lt;code>spring.data.neo4j.database&lt;/code> 会报错。本文特对该问题进行记录、分析和解决，以给面临相同问题的朋友作参考。&lt;/p></description></item><item><title>蛤蜊島之旅</title><link>https://leileiluoluo.github.io/posts/ge-li-dao.html</link><pubDate>Mon, 05 May 2025 12:50:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/ge-li-dao.html</guid><description>近日去了莊河蛤蜊島。這是一個離市區很近的小島，島上有山、亭子、民宿、細沙海灘，但地處黃海，海水沒有渤海藍。
島上流傳的神話故事不錯。</description></item><item><title>如何使用 Spring Data 同时访问 MySQL 和 Neo4j 数据库？</title><link>https://leileiluoluo.github.io/posts/how-does-spring-data-operate-both-mysql-and-neo4j.html</link><pubDate>Mon, 05 May 2025 08:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/how-does-spring-data-operate-both-mysql-and-neo4j.html</guid><description>本文将以实例的方式探索「如何使用 Spring Data 同时访问 MySQL 和 Neo4j 数据库？」，涉及 Spring Boot 中多个数据源的配置、多个事务的配置，以及多组 Repository 的使用。</description></item><item><title>如何使用 Spring Data Neo4j 访问 Neo4j 数据库？</title><link>https://leileiluoluo.github.io/posts/spring-data-neo4j.html</link><pubDate>Thu, 05 Dec 2024 08:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/spring-data-neo4j.html</guid><description>上文「Neo4j 初探」介绍了 Neo4j 的基本概念，并对 Neo4j 进行了初步使用。本文则关注如何使用 Spring Data Neo4j 访问 Neo4j 数据库？Spring Data Neo4j 是 Spring Data 项目的一部分，它简化了与 Neo4j 图形数据库的交互。Spring Data Neo4j 除了可以通过 Repository 的方式轻松实现常见的 CRUD 操作外，还支持事务管理、Cypher 查询和图数据建模等特性。</description></item><item><title>Neo4j 初探</title><link>https://leileiluoluo.github.io/posts/neo4j-introduction.html</link><pubDate>Sun, 24 Nov 2024 14:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/neo4j-introduction.html</guid><description>Neo4j 使用 Java 和 Scala 语言编写，是一种专门为处理图数据而设计的开源数据库管理系统，其通过节点（Node）、关系（Relationship）和属性（Property）直观地表示数据，能够以高效的方式存储和查询复杂关系网络。Neo4j 特别适用于涉及连接关系的场景（如社交网络、推荐系统和知识图谱等）。除了具有图数据库的核心特性之外，Neo4j 还支持事务、集群化部署和运行时容错。</description></item><item><title>React 初探</title><link>https://leileiluoluo.github.io/posts/react-introduction.html</link><pubDate>Thu, 21 Nov 2024 14:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/react-introduction.html</guid><description>React 是由 Facebook 开发的一个用于构建用户界面（UI，User Interface）的前端 JavaScript 库，其专注于视图（View）层，使开发者能够更高效地构建单页应用以及复杂的组件化界面。本文为 React 的初探，首先会介绍 React 的主要特性，然后会以实例的方式介绍其基础特性的使用。</description></item><item><title>博友圈 v2 版本技术架构</title><link>https://leileiluoluo.github.io/posts/boyouquan-v2-introduction.html</link><pubDate>Fri, 01 Nov 2024 18:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/boyouquan-v2-introduction.html</guid><description>&lt;p>&lt;a href="https://www.boyouquan.com">博友圈&lt;/a> v1 版本（源码：&lt;a href="https://github.com/leileiluoluo/boyouquan-api/releases/tag/v1.10">boyouquan&lt;/a>）是一个集前后端为一体的 Java 应用程序，其使用 Maven 管理，使用了 Spring Boot + Thymeleaf + MyBatis 技术，其中 Thymeleaf 负责页面渲染。&lt;/p>
&lt;p>而本次改造后的 v2 版本（前端源码：&lt;a href="https://github.com/leileiluoluo/boyouquan-ui/releases/tag/v2.0">boyouquan-ui&lt;/a>，后端源码：&lt;a href="https://github.com/leileiluoluo/boyouquan-api/releases/tag/v2.0">boyouquan-api&lt;/a>）则将博友圈单体项目进行了前后端分离。前端使用了 React 框架；后端依然使用 Spring Boot + MyBatis 框架，但去除了 Thymeleaf 渲染页面的部分，使得后端变为了一个纯净的 REST API 提供者。&lt;/p>
&lt;p>本文即重点介绍一下博友圈 v2 版本的前端、后端技术架构，以及部署架构。&lt;/p></description></item><item><title>Spring Boot 集成 Thymeleaf 搭建 Web 应用</title><link>https://leileiluoluo.github.io/posts/spring-boot-and-thymeleaf-integration.html</link><pubDate>Thu, 24 Oct 2024 16:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/spring-boot-and-thymeleaf-integration.html</guid><description>Thymeleaf 是一个流行的 Java 模板引擎，具有处理 HTML、XML、JavaScript、CSS 和纯文本的能力。Thymeleaf 可以和 Spring Boot 进行无缝集成，且可以非常容易地对 Java Model 类及其字段进行访问，从而对模板内容进行动态渲染。并且，Thymeleaf 还提供了一组简单有力的表达式来支持循环、条件判断、静态工具类及 Spring Bean 访问等能力。此外，Thymeleaf 还对自定义扩展以及表单提供了很好的支持。</description></item><item><title>2024 國慶下泉眼之旅</title><link>https://leileiluoluo.github.io/posts/the-national-day-holiday-2024.html</link><pubDate>Sat, 12 Oct 2024 19:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/the-national-day-holiday-2024.html</guid><description>國慶假期沒有去太多地方，僅去了附近的下泉眼。這塊有山有水的地方接近原生態，十月還沒有變冷，陽光灑在草地上，我們在這裏烤肉、聊天。近處是一條小河，河水清澈，我們拿河水洗菜、孩子們在裏邊戲水，不亦樂乎。</description></item><item><title>如何搭建 Spring Cloud 统一配置服务？</title><link>https://leileiluoluo.github.io/posts/spring-cloud-config-server-setup.html</link><pubDate>Mon, 16 Sep 2024 20:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/spring-cloud-config-server-setup.html</guid><description>Spring Cloud 配置服务可以用于统一管理微服务的配置。相比于在各个微服务分别编写独立的配置文件，统一的配置服务可以大大提升维护配置文件的效率。
本文将依次搭建一个 Registry Service、Config Service、App Service 来演示 Config Service 的作用。其中 Registry Service 是一个 Eureka Server，即服务注册中心；Config Service 是本文的主角，即使用了 Spring Cloud Config Server 的统一配置中心；App Service 是统一配置的使用者，即普通的微服务。</description></item><item><title>一週的天津濱海之旅</title><link>https://leileiluoluo.github.io/posts/tianjin-binhai-travel.html</link><pubDate>Sun, 15 Sep 2024 12:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/tianjin-binhai-travel.html</guid><description>&lt;p>月初，進行了爲期一週的天津濱海之旅。感覺天津濱海的地面很平、馬路很寬，城市建設也不錯。&lt;/p></description></item><item><title>Java 13 主要引入了哪些新特性？</title><link>https://leileiluoluo.github.io/posts/java-13-new-features.html</link><pubDate>Sun, 25 Aug 2024 08:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/java-13-new-features.html</guid><description>本文重点回顾 Java 13 引入的那些主要特性。
（Java 13 主要新特性脑图） 1 文本块（预览） Java 13 引入了文本块（Text Blocks）预览功能，以简化多行字符串的表示。文本块用三重引号 &amp;quot;&amp;quot;&amp;quot; 定义，支持格式化和保留换行符，使得处理多行字符串更直观。它还自动去除了前导和尾随空白，使字符串更干净，避免了传统转义字符的使用。这个预览特性为开发者提供了更好的代码可读性和维护性。</description></item><item><title>Java 12 主要引入了哪些新特性？</title><link>https://leileiluoluo.github.io/posts/java-12-new-features.html</link><pubDate>Tue, 13 Aug 2024 11:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/java-12-new-features.html</guid><description>本文重点回顾 Java 12 引入的那些主要特性。
（Java 12 主要新特性脑图） 1 Switch 表达式（预览） switch 语句是 Java 语言中除了 if-else 语句外的另一个流程控制语句。</description></item><item><title>Java 11 主要引入了哪些新特性？</title><link>https://leileiluoluo.github.io/posts/java-11-new-features.html</link><pubDate>Fri, 09 Aug 2024 10:00:00 +0800</pubDate><guid>https://leileiluoluo.github.io/posts/java-11-new-features.html</guid><description>本文重点回顾 Java 11 引入的那些主要特性。
（Java 11 主要新特性脑图） 1 全新的 HTTP 客户端 API Java 11 引入了全新的 HTTP 客户端 API（主要有三个类 HttpClient、HttpRequest 和 HttpResponse），目的是替换现有的 HttpURLConnection API。</description></item></channel></rss>